{
  "customizations": {
    "vscode": {
      "extensions": [
        "donjayamanne.githistory",
        "esbenp.prettier-vscode",
        "GraphQL.vscode-graphql-syntax",
        "ms-azuretools.vscode-docker",
        "ms-vscode.cpptools",
        "streetsidesoftware.code-spell-checker",
        "Thinker.sort-json",
        "usernamehw.errorlens",
        "ziglang.vscode-zig"
      ],
      "settings": {
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[markdown]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[yaml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[zig]": {
          "editor.defaultFormatter": "ziglang.vscode-zig",
          "editor.formatOnSave": true
        },
        "editor.rulers": [80],
        "terminal.integrated.defaultProfile.linux": "bash",
        "typescript.inlayHints.enumMemberValues.enabled": true,
        "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
        "typescript.inlayHints.parameterNames.enabled": "all",
        "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
        "typescript.inlayHints.parameterTypes.enabled": true,
        "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
        "typescript.inlayHints.variableTypes.enabled": true,
        "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,
        "zig.zls.path": "/usr/local/bin/zls"
      }
    }
  },
  "dockerComposeFile": "./compose.yaml",
  "overrideCommand": true,
  "postCreateCommand": ".devcontainer/post_create.sh",
  "service": "work",
  "workspaceFolder": "/work"
}
